name: Test compile secp256k1 native code

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - trying
    - staging

jobs:
  test-compile:
    name: Compile secp256k1 native code
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-11]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Install dependencies ubuntu
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libtool
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get install -y openjdk-17-jdk-headless

    - name: Install dependencies macos
      if: matrix.os == 'macos-11'
      run: |
        brew install automake libtool
        brew install openjdk@17
        sudo ln -sfn /usr/local/opt/openjdk@17/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-17.jdk
        echo 'export PATH="/usr/local/opt/openjdk@17/bin:$PATH"' >> /Users/runner/.bash_profile
        export CPPFLAGS="-I/usr/local/opt/openjdk@17/include"

    - name: Build native code
      run: |
        ./compile.sh

    - name: Export artifacts linux
      if: matrix.os == 'ubuntu-22.04'
      uses: actions/upload-artifact@v3
      with:
        name: linux64
        path: ./secp256k1-tmp/.libs/

    - name: Export artifacts macos
      if: matrix.os == 'macos-11'
      uses: actions/upload-artifact@v3
      with:
        name: macos64
        path: ./secp256k1-tmp/.libs/

  # Job to notify bors when run is successful. Skipped and cancelled job is considered
  # as failure. More info https://github.com/bors-ng/bors-ng/issues/1115.
  bors_success:
    name: bors build finished
    needs:
    - test-compile
    if: "github.event_name == 'push' && (github.ref == 'refs/heads/trying' || github.ref == 'refs/heads/staging') && success()"
    runs-on: ubuntu-latest
    steps:
    - run: true
